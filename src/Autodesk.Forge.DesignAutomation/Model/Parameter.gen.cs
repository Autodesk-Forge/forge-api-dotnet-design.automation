/* 
 * Forge SDK
 *
 * The Forge Platform contains an expanding collection of web service components that can be used with Autodesk cloud-based products or your own technologies. Take advantage of Autodeskâ€™s expertise in design and engineering.
 *
 * Design Automation
 *
 * Generated by [Forge Swagger Codegen](https://git.autodesk.com/forge-ozone/forge-rsdk-codegen)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Autodesk.Forge.DesignAutomation.Model
{
    /// <summary>
    /// Parameter
    /// </summary>
    [DataContract]
    public partial class Parameter 
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Parameter" /> class.
        /// </summary>
        public Parameter()
        {
        }
        
        /// <summary>
        /// This attribute together with the XrefTreeArgumentBase.PathInZip attribute determine how zip files are handled. Default is false. For onDemand&#x3D;&#39;true&#39; the Zip file is just downloaded, not unzipped.
        /// </summary>
        /// <value>This attribute together with the XrefTreeArgumentBase.PathInZip attribute determine how zip files are handled. Default is false. For onDemand&#x3D;&#39;true&#39; the Zip file is just downloaded, not unzipped.</value>
        [DataMember(Name="zip", EmitDefaultValue=false)]
        public bool Zip { get; set; }

        /// <summary>
        /// Provides default name of the file or folder on the processing server for this parameter. Note this name may be overriden in various ways.
        /// </summary>
        /// <value>Provides default name of the file or folder on the processing server for this parameter. Note this name may be overriden in various ways.</value>
        [DataMember(Name="localName", EmitDefaultValue=false)]
        public string LocalName { get; set; }

        /// <summary>
        /// The parameter will be accessed by the appbundle on demand and should not be used by the system. Default is false. When onDemand&#x3D;&#39;true&#39;, the next parameter&#39;s &#39;verb&#39;s only valid values are &#x60;&#x60;get&#x60;&#x60; or &#x60;&#x60;head&#x60;&#x60;.
        /// </summary>
        /// <value>The parameter will be accessed by the appbundle on demand and should not be used by the system. Default is false. When onDemand&#x3D;&#39;true&#39;, the next parameter&#39;s &#39;verb&#39;s only valid values are &#x60;&#x60;get&#x60;&#x60; or &#x60;&#x60;head&#x60;&#x60;.</value>
        [DataMember(Name="ondemand", EmitDefaultValue=false)]
        public bool Ondemand { get; set; }

        /// <summary>
        /// Request method (get, put, patch or post).
        /// </summary>
        /// <value>Request method (get, put, patch or post).</value>
        [DataMember(Name="verb", EmitDefaultValue=false)]
        public Verb Verb { get; set; }

        /// <summary>
        /// The description of the parameter.
        /// </summary>
        /// <value>The description of the parameter.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Specifies whether the corresponding WorkItem Argument is required. Default is false.
        /// </summary>
        /// <value>Specifies whether the corresponding WorkItem Argument is required. Default is false.</value>
        [DataMember(Name="required", EmitDefaultValue=false)]
        public bool Required { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }

}
