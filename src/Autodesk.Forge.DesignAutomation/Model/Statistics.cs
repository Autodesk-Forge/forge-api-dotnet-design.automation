/* 
 * Forge Design Automation
 *
 * Generated by [Forge Swagger Codegen](https://git.autodesk.com/design-automation/forge-rsdk-codegen)
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Autodesk.Forge.DesignAutomation.Model
{
    /// <summary>
    /// Statistics
    /// </summary>
    [DataContract]
    public partial class Statistics 
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Statistics" /> class.
        /// </summary>
        /// <param name="TimeQueued">TimeQueued.</param>
        /// <param name="TimeDownloadStarted">TimeDownloadStarted.</param>
        /// <param name="TimeInstructionsStarted">TimeInstructionsStarted.</param>
        /// <param name="TimeInstructionsEnded">TimeInstructionsEnded.</param>
        /// <param name="TimeUploadEnded">TimeUploadEnded.</param>
        /// <param name="TimeFinished">TimeFinished.</param>
        /// <param name="BytesDownloaded">BytesDownloaded.</param>
        /// <param name="BytesUploaded">BytesUploaded.</param>
        public Statistics(DateTime TimeQueued = default(DateTime), DateTime TimeDownloadStarted = default(DateTime), DateTime TimeInstructionsStarted = default(DateTime), DateTime TimeInstructionsEnded = default(DateTime), DateTime TimeUploadEnded = default(DateTime), DateTime TimeFinished = default(DateTime), long BytesDownloaded = default(long), long BytesUploaded = default(long))
        {
            this.TimeQueued = TimeQueued;
            this.TimeDownloadStarted = TimeDownloadStarted;
            this.TimeInstructionsStarted = TimeInstructionsStarted;
            this.TimeInstructionsEnded = TimeInstructionsEnded;
            this.TimeUploadEnded = TimeUploadEnded;
            this.TimeFinished = TimeFinished;
            this.BytesDownloaded = BytesDownloaded;
            this.BytesUploaded = BytesUploaded;
        }
        
        /// <summary>
        /// Gets or Sets TimeQueued
        /// </summary>
        [DataMember(Name="timeQueued", EmitDefaultValue=false)]
        public DateTime TimeQueued { get; set; }

        /// <summary>
        /// Gets or Sets TimeDownloadStarted
        /// </summary>
        [DataMember(Name="timeDownloadStarted", EmitDefaultValue=false)]
        public DateTime TimeDownloadStarted { get; set; }

        /// <summary>
        /// Gets or Sets TimeInstructionsStarted
        /// </summary>
        [DataMember(Name="timeInstructionsStarted", EmitDefaultValue=false)]
        public DateTime TimeInstructionsStarted { get; set; }

        /// <summary>
        /// Gets or Sets TimeInstructionsEnded
        /// </summary>
        [DataMember(Name="timeInstructionsEnded", EmitDefaultValue=false)]
        public DateTime TimeInstructionsEnded { get; set; }

        /// <summary>
        /// Gets or Sets TimeUploadEnded
        /// </summary>
        [DataMember(Name="timeUploadEnded", EmitDefaultValue=false)]
        public DateTime TimeUploadEnded { get; set; }

        /// <summary>
        /// Gets or Sets TimeFinished
        /// </summary>
        [DataMember(Name="timeFinished", EmitDefaultValue=false)]
        public DateTime TimeFinished { get; set; }

        /// <summary>
        /// Gets or Sets BytesDownloaded
        /// </summary>
        [DataMember(Name="bytesDownloaded", EmitDefaultValue=false)]
        public long BytesDownloaded { get; set; }

        /// <summary>
        /// Gets or Sets BytesUploaded
        /// </summary>
        [DataMember(Name="bytesUploaded", EmitDefaultValue=false)]
        public long BytesUploaded { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            return this.ToJson();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }

}
